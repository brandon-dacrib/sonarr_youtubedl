From b5b5bd29de6f578bd93c1dcdbb536ca55e7d71b7 Mon Sep 17 00:00:00 2001
From: Eveldee <eveldee0680@live.fr>
Date: Mon, 17 Apr 2023 11:23:30 +0200
Subject: [PATCH 1/3] [utils] Fix non-blocking only filesystems

This workaround is needed for some filesystems like virtiofs where any
file locking or unlocking operation must be non-blocking
---
 yt_dlp/utils.py | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/yt_dlp/utils.py b/yt_dlp/utils.py
index 40533c2cb43b..1725246dc9af 100644
--- a/yt_dlp/utils.py
+++ b/yt_dlp/utils.py
@@ -2190,7 +2190,11 @@ def _unlock_file(f):
             try:
                 fcntl.flock(f, fcntl.LOCK_UN)
             except OSError:
-                fcntl.lockf(f, fcntl.LOCK_UN)
+                try:
+                    fcntl.lockf(f, fcntl.LOCK_UN)
+                except OSError: # Workaround for non-blocking only filesystems like virtiofs
+                    fcntl.flock(f, fcntl.LOCK_UN | fcntl.LOCK_NB)
+
 
     except ImportError:
 

From 3a69f8cc29125a332441c6d8709f1b30bc116c36 Mon Sep 17 00:00:00 2001
From: Eveldee <eveldee0680@live.fr>
Date: Mon, 17 Apr 2023 11:37:29 +0200
Subject: [PATCH 2/3] [utils] Fix code style

---
 yt_dlp/utils.py | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/yt_dlp/utils.py b/yt_dlp/utils.py
index 1725246dc9af..021caa326e76 100644
--- a/yt_dlp/utils.py
+++ b/yt_dlp/utils.py
@@ -2192,10 +2192,9 @@ def _unlock_file(f):
             except OSError:
                 try:
                     fcntl.lockf(f, fcntl.LOCK_UN)
-                except OSError: # Workaround for non-blocking only filesystems like virtiofs
+                except OSError:  # Workaround for non-blocking only filesystems like virtiofs
                     fcntl.flock(f, fcntl.LOCK_UN | fcntl.LOCK_NB)
 
-
     except ImportError:
 
         def _lock_file(f, exclusive, block):

From 708c2d43647559c04f2b2cc840e2deb27f70f1fa Mon Sep 17 00:00:00 2001
From: pukkandan <pukkandan.ytdlp@gmail.com>
Date: Mon, 17 Apr 2023 18:12:15 +0530
Subject: [PATCH 3/3] Simplify

---
 yt_dlp/utils.py | 12 +++++-------
 1 file changed, 5 insertions(+), 7 deletions(-)

diff --git a/yt_dlp/utils.py b/yt_dlp/utils.py
index 021caa326e76..ec03dfca59b9 100644
--- a/yt_dlp/utils.py
+++ b/yt_dlp/utils.py
@@ -2187,13 +2187,11 @@ def _lock_file(f, exclusive, block):
                 fcntl.lockf(f, flags)
 
         def _unlock_file(f):
-            try:
-                fcntl.flock(f, fcntl.LOCK_UN)
-            except OSError:
-                try:
-                    fcntl.lockf(f, fcntl.LOCK_UN)
-                except OSError:  # Workaround for non-blocking only filesystems like virtiofs
-                    fcntl.flock(f, fcntl.LOCK_UN | fcntl.LOCK_NB)
+            with contextlib.suppress(OSError):
+                return fcntl.flock(f, fcntl.LOCK_UN)
+            with contextlib.suppress(OSError):
+                return fcntl.lockf(f, fcntl.LOCK_UN)  # AOSP does not have flock()
+            return fcntl.flock(f, fcntl.LOCK_UN | fcntl.LOCK_NB)  # virtiofs needs LOCK_NB on unlocking
 
     except ImportError: